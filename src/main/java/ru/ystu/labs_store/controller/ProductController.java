package ru.ystu.labs_store.controller;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import ru.ystu.labs_store.model.Category;import ru.ystu.labs_store.model.Product;import ru.ystu.labs_store.service.cart.CartService;import ru.ystu.labs_store.service.product.ProductService;import javax.servlet.http.HttpServletRequest;import java.util.List;@Controllerpublic class ProductController {	private final ProductService productService;	private final CartService cartService;	public ProductController(ProductService productService, CartService cartService) {		this.productService = productService;		this.cartService = cartService;	}	@GetMapping("/product/{id}")	public String showProduct(@PathVariable("id") int id, Model model) {		Product product = productService.findProductById(id);		boolean isExistCartProduct = productService.isExistProductCartById(id);		model.addAttribute("product", product);		model.addAttribute("is_exist_in_cart", isExistCartProduct);		return "productPage";	}	@GetMapping("/product/remove/{id}")	public String removeProductFromCart(@PathVariable("id") int id) {		cartService.removeProductById(id);		return "redirect:/product/" + id;	}	@GetMapping("/product/add/{id}")	public String addProductToCart(HttpServletRequest request, @PathVariable("id") int id) {		String login = request.getUserPrincipal().getName();		cartService.addProductToCartById(id, login);		return "redirect:/product/" + id;	}	@GetMapping("/add")	public String showCreateProductPage(Model model) {		return showEditPage(model, 0);	}	@PostMapping("/add")	public String saveProduct(@ModelAttribute("product") Product receiveProduct) {		productService.create(receiveProduct);		return "redirect:/";	}	@GetMapping("/edit/{id}")	public String showEditProductPage(@PathVariable("id") int id, Model model) {		return showEditPage(model, id);	}	@PostMapping("/edit/{id}")	public String editProduct(@PathVariable("id") int id, @ModelAttribute("product") Product receiveProduct) {		receiveProduct.setId(id);		productService.edit(receiveProduct);		return "redirect:/";	}	@GetMapping("/remove/{id}")	public String removeProduct(@PathVariable("id") int id) {		productService.removeProductById(id);		return "redirect:/";	}	private String showEditPage(Model model, int id) {		List<Category> categoryList = productService.getCategoryList();		Product product = productService.findProductById(id);		model.addAttribute("is_add", product.getId() == 0);		model.addAttribute("product", product);		model.addAttribute("categories", categoryList);		return "editPage";	}}