package ru.ystu.labs_store.service.product;import com.sun.istack.Nullable;import org.springframework.stereotype.Service;import ru.ystu.labs_store.model.Cart;import ru.ystu.labs_store.model.Category;import ru.ystu.labs_store.model.Product;import ru.ystu.labs_store.repository.CartRepository;import ru.ystu.labs_store.repository.CategoryRepository;import ru.ystu.labs_store.repository.ProductRepository;import java.util.List;@Servicepublic class ProductServiceImpl implements ProductService {	private final ProductRepository productRepository;	private final CategoryRepository categoryRepository;	private final CartRepository cartRepository;	public ProductServiceImpl(ProductRepository productRepository, CategoryRepository categoryRepository, CartRepository cartRepository) {		this.productRepository = productRepository;		this.categoryRepository = categoryRepository;		this.cartRepository = cartRepository;	}	@Override	public List<Category> getCategoryList() {		return categoryRepository.findAll();	}	@Override	public boolean isExistProductCartById(int idProduct) {		return findCartProduct(idProduct) != null;	}	public Cart findCartProduct(int idProduct) {		return cartRepository.findAll().stream()				.filter(it -> it.getProduct().getId() == idProduct && it.getIdArchive() == null)				.findAny()				.orElse(null);	}	@Override	public void create(Product product) {		productRepository.save(product);	}	@Override	public Product findProductById(int id) {		return productRepository.findById(id).orElse(new Product());	}	@Override	public void edit(Product product) {		productRepository.save(product);	}	@Override	public void removeProductById(int id) {		productRepository.deleteById(id);	}}