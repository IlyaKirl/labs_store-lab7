package ru.ystu.labs_store.service.main;import com.sun.istack.Nullable;import org.springframework.stereotype.Service;import ru.ystu.labs_store.model.Category;import ru.ystu.labs_store.model.Product;import ru.ystu.labs_store.repository.CategoryRepository;import ru.ystu.labs_store.repository.ProductRepository;import java.util.List;import java.util.stream.Collectors;@Servicepublic class MainServiceImpl implements MainService {	private final ProductRepository productRepository;	private final CategoryRepository categoryRepository;	public MainServiceImpl(ProductRepository productRepository, CategoryRepository categoryRepository) {		this.productRepository = productRepository;		this.categoryRepository = categoryRepository;	}	@Override	public List<Product> getProductList(Product product) {		if (product == null) {			return productRepository.findAll();		} else if (product.getName() == null || product.getName().isEmpty()) {			return productRepository.findAll();		} else if (product.getCategory() != null && !product.getCategory().getName().isEmpty()) {			return productRepository.findAll().stream().filter(it ->					it.getCategory().getName().toLowerCase().contains(product.getCategory().getName())).collect(Collectors.toList());		} else {			return productRepository.findAll().stream().filter(it ->					it.getName().toLowerCase().contains(product.getName()) ||							(it.getPrice().toString()).contains(product.getName())			).collect(Collectors.toList());		}	}	@Override	public List<Product> getProductListByCategory(Category category, Product receiveProduct) {		if (category == null || category.getId() == 0) {			return getProductList(receiveProduct);		} else {			return getProductList(null).stream().filter(it ->					it.getCategory().getId() == category.getId()			).collect(Collectors.toList());		}	}	@Override	public List<Category> getCategoryList() {		return categoryRepository.findAll();	}	@Override	public Category getCategory(int idCategory) {		return categoryRepository.findById(idCategory).orElse(null);	}}